package stepDefinitions;

import io.cucumber.java.After;
import io.cucumber.java.Before;
import io.cucumber.java.en.And;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;
import java.util.Random;

import static org.junit.Assert.assertEquals;

public class MailchimpStepdefs {
   private WebDriver driver;
   private WebDriverWait wait;

    @Before
    public void setUp() throws InterruptedException {
        System.out.println("nu börjar testet");

     /*   System.setProperty("webdriver.chrome.driver", "C:\\Selenium\\chromedriver.exe");
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--remote-allow-origins=*");
        driver = new ChromeDriver(options);
        driver.get("https://login.mailchimp.com/signup/");

        System.setProperty("webdriver.edge.driver", "C:\\Selenium\\msedgedriver.exe");
        driver2= new EdgeDriver();
        driver2.get("https://login.mailchimp.com/signup/");
        Thread.sleep(1000);
    */
    }
    @After
    public void tearDown() {
        driver.close();
        driver.quit();
        System.out.println("Nu är detta testfall klart");
    }


    @Given("I have browser{string}")
    public void iHaveBrowserBrowser(String browser) throws InterruptedException {
        if (browser.equals("Chrome")) {
            System.setProperty("webdriver.chrome.driver", "C:\\Selenium\\chromedriver.exe");
            ChromeOptions options = new ChromeOptions();
            options.addArguments("--remote-allow-origins=*");
            driver = new ChromeDriver(options);
            driver.get("https://login.mailchimp.com/signup/");

        } else {
            System.setProperty("webdriver.edge.driver", "C:\\Selenium\\msedgedriver.exe");
            driver = new EdgeDriver();
            driver.get("https://login.mailchimp.com/signup/");
        }
    }

    @When("I have email{string}")
    public void iHaveEmail(String email) throws InterruptedException {

        driver.findElement(By.id("email")).sendKeys(email);
        Thread.sleep(1000);

    }
    @When("I have username {string}")
    public void iHaveUsernameUsername(String username) throws InterruptedException {
        WebElement sendUsername = driver.findElement(By.id("new_username"));
        sendUsername.click();
        sendUsername.clear();
        Random rand = new Random();
        if (username.equals("LongUsername")) {

            username = username.repeat(10);
            username = username + rand.nextInt(1000000);
            sendUsername.sendKeys(username);
            Thread.sleep(1000);
        } else if (username.equals("hej")) {
            sendUsername.sendKeys(username);
            Thread.sleep(1000);
        } else {

            username = username + rand.nextInt(1000000);
            sendUsername.sendKeys(username);
            Thread.sleep(1000);
        }
  }
    /*
    @Given("I have username MyUserName")
    public void iHaveUsernameMyUsername() throws InterruptedException {
        WebElement sendUsername = driver.findElement(By.id("new_username"));
        sendUsername.click();
        sendUsername.clear();
        String username = "MyUserName";
            Random rand = new Random();
             username = username + rand.nextInt(1000000);
            sendUsername.sendKeys(username);
            Thread.sleep(1000);
        }
    @And("I have username hej")
    public void iHaveUsernameHej() throws InterruptedException {
        WebElement sendUsername = driver.findElement(By.id("new_username"));
        String username= "hej";
        sendUsername.click();
        sendUsername.clear();

        sendUsername.sendKeys(username);
        Thread.sleep(1000);
    }

    @And("I have username LongUsername")
    public void iHaveUsernameLongUsername() throws InterruptedException {
        WebElement sendUsername = driver.findElement(By.id("new_username"));
        sendUsername.click();
        sendUsername.clear();
        String username ="LongUsername";
            username = username.repeat(10);
            sendUsername.sendKeys(username);
            Thread.sleep(1000);

    }
*/
    @When("I have password {string}")
    public void iHavePassword(String password) throws InterruptedException {
        WebElement pw = driver.findElement(By.id("new_password"));
        pw.sendKeys(password);
        Thread.sleep(1000);
        iAgreeTheNewsL((By.name("marketing_newsletter")));
    }

    private void iAgreeTheNewsL(By Newsletters) throws InterruptedException {

           // WebElement press = driver.findElement(By.name("marketing_newsletter"));
         wait = new WebDriverWait(driver, Duration.ofSeconds(10));
        WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(Newsletters));
            element.click();
            Thread.sleep(2000);
        }

    @Then("I Do signUp")
    public void IDoSignUp() throws InterruptedException {
        WebElement pressSignUp = driver.findElement(By.id("create-account-enabled"));
        pressSignUp.click();
        Thread.sleep(2000);
        String expected = "Success | Mailchimp";
        String actual = driver.getTitle();
        assertEquals(expected, actual);
    }
    @And("I Dont signUp")
    public void IDontSignUp() throws InterruptedException {
        WebElement pressSignUp = driver.findElement(By.id("create-account-enabled"));
        pressSignUp.click();
        Thread.sleep(2000);


        String expected = "Signup | Mailchimp";
        String actual = driver.getTitle();

        assertEquals(expected, actual);
    }
}
